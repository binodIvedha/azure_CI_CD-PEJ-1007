apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: azure-functions-deployment-cicd-template
  title: Create Azure Functions Deployment Configuration
  description: A comprehensive template for Azure Functions deployment including CI/CD pipeline configuration
  tags:
    - azure
    - azure-functions
    - serverless
    - recommended
spec:
  owner: platformnex
  type: service

parameters:
  - title: Azure Function Deployment Details
    properties:
      functionName:
        title: Azure Function Name
        type: string
        description: The unique name for the Azure Function to be deployed
        pattern: ^[a-z0-9-]{3,24}$
        minLength: 3
        maxLength: 24
      runtime:
        title: Runtime Environment
        type: string
        description: Runtime environment for the Azure Function
        enum:
          - node|18
          - node|16
          - python|3.9
          - python|3.10
          - dotnet|6.0
          - dotnet|7.0
      sourceLocation:
        title: Source Code Location
        type: string
        description: Git repository URL containing the function code
      entryPoint:
        title: Entry Point Function
        type: string
        description: The name of the main function that serves as the entry point
      resourceGroup:
        title: Resource Group Name
        type: string
        description: Azure resource group name
      region:
        title: Deployment Region
        type: string
        enum:
          - eastus
          - westus
          - westeurope
          - northeurope
          - southeastasia
          - centralus
          - southcentralus
          - eastus2
          - westus2
          - centralindia
          - japaneast
          - australiaeast
          - brazilsouth
          - canadacentral
          - canadaeast
          - francecentral
          - germanywestcentral
          - koreacentral
          - southafricanorth
          - uksouth
          - uae
        description: Azure region for deployment
      triggerType:
        title: Trigger Type
        type: string
        enum:
          - http
          - timer
          - queue
          - blob
          - cosmosdb
          - eventgrid
          - eventhub
        description: Event type that triggers the function
      envVariables:
        title: Environment Variables
        type: array
        description: List of environment variables
        items:
          type: object
          properties:
            name:
              title: Variable Name
              type: string
              pattern: ^[A-Z][A-Z0-9_]*$
            value:
              title: Variable Value
              type: string
      scaling:
        title: Scaling Configuration
        type: object
        properties:
          minInstances:
            title: Minimum Instances
            type: integer
            default: 1
            minimum: 1
          maxInstances:
            title: Maximum Instances
            type: integer
            default: 10
            maximum: 20
      memory:
        title: Memory Allocation
        type: string
        enum:
          - 128MB
          - 256MB
          - 512MB
          - 1GB
          - 2GB
          - 4GB
        default: 256MB
      timeout:
        title: Function Timeout
        type: string
        default: "300s"
        pattern: ^\d+s$
      gitProvider:
        title: Git Provider
        type: string
        enum:
          - github
          - gitlab
          - bitbucket
      owner:
        title: Repository Owner
        type: string
      repo:
        title: Repository Name
        type: string
      branchName:
        title: Branch Name
        type: string
        default: "azure-function-deployment"
      targetBranch:
        title: Target Branch
        type: string
        default: "main"
    required:
      - functionName
      - runtime
      - sourceLocation
      - entryPoint
      - resourceGroup
      - region
      - triggerType
      - gitProvider
      - owner
      - repo

steps:
  - id: validateInput
    name: Validate Input Parameters
    action: custom:validate-azure-config
    input:
      functionName: ${{ parameters.functionName }}
      resourceGroup: ${{ parameters.resourceGroup }}
      region: ${{ parameters.region }}

  - id: fetchTemplate
    name: Fetch Base Templates
    action: fetch:template
    input:
      url: ./templates
      values:
        functionName: ${{ parameters.functionName }}
        runtime: ${{ parameters.runtime }}
        triggerType: ${{ parameters.triggerType }}

  - id: createResourceGroup
    name: Create Azure Resource Group
    action: azure:create-resource-group
    input:
      name: ${{ parameters.resourceGroup }}
      location: ${{ parameters.region }}

  - id: createStorageAccount
    name: Create Azure Storage Account
    action: azure:create-storage-account
    input:
      name: ${{ parameters.functionName }}storage
      resourceGroup: ${{ parameters.resourceGroup }}
      location: ${{ parameters.region }}
      sku: Standard_LRS

  - id: setupKeyVault
    name: Setup Azure Key Vault
    action: azure:create-key-vault
    input:
      name: ${{ parameters.functionName }}-kv
      resourceGroup: ${{ parameters.resourceGroup }}
      location: ${{ parameters.region }}

  - id: configureSecrets
    name: Configure Secrets in Key Vault
    action: azure:set-secrets
    input:
      keyVault: ${{ steps.setupKeyVault.output.name }}
      secrets: ${{ parameters.envVariables }}

  - id: generateInfrastructure
    name: Generate Infrastructure as Code
    action: template:generate
    input:
      template: azure-function-infrastructure
      values:
        functionName: ${{ parameters.functionName }}
        runtime: ${{ parameters.runtime }}
        scaling: ${{ parameters.scaling }}
        memory: ${{ parameters.memory }}
        timeout: ${{ parameters.timeout }}

  - id: generatePipeline
    name: Generate CI/CD Pipeline
    action: template:generate
    input:
      template: azure-pipeline
      values:
        provider: ${{ parameters.gitProvider }}
        triggers:
          - main
          - develop
        stages:
          - build
          - test
          - deploy

  - id: createRepository
    name: Create or Update Repository
    action: publish:repository
    input:
      provider: ${{ parameters.gitProvider }}
      owner: ${{ parameters.owner }}
      repo: ${{ parameters.repo }}
      description: Azure Function Deployment for ${{ parameters.functionName }}
      defaultBranch: ${{ parameters.targetBranch }}

  - id: createPullRequest
    name: Create Pull Request
    action: publish:pull-request
    input:
      provider: ${{ parameters.gitProvider }}
      owner: ${{ parameters.owner }}
      repo: ${{ parameters.repo }}
      title: "Add Azure Function Deployment Configuration for ${{ parameters.functionName }}"
      branchName: ${{ parameters.branchName }}
      description: |
        ## Azure Function Deployment Configuration
        
        This PR sets up the complete deployment configuration for Azure Function `${{ parameters.functionName }}`.
        
        ### Configuration Details
        - **Function Name**: ${{ parameters.functionName }}
        - **Runtime**: ${{ parameters.runtime }}
        - **Region**: ${{ parameters.region }}
        - **Trigger Type**: ${{ parameters.triggerType }}
        
        ### Infrastructure Components
        - Azure Function App
        - Storage Account
        - Key Vault
        - Application Insights
        
        ### Included Changes
        - Infrastructure as Code (ARM templates)
        - CI/CD Pipeline Configuration
        - Environment Configuration
        - Security Settings
        
        Please review the changes and ensure all security requirements are met.

output:
  links:
    - title: Pull Request
      url: ${{ steps.createPullRequest.output.remoteUrl }}
    - title: Azure Portal
      url: https://portal.azure.com/#@/resource/subscriptions/${{ steps.createResourceGroup.output.subscriptionId }}/resourceGroups/${{ parameters.resourceGroup }}
    - title: Application Insights
      url: ${{ steps.generateInfrastructure.output.appInsightsUrl }}