name: Azure Function App Deploy

on:
  push:
    branches:
      - ${{ values.defaultBranch }}
  pull_request:
    branches:
      - ${{ values.defaultBranch }}
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_NAME: ${{ values.functionName }}
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'
  RESOURCE_GROUP: ${{ values.resourceGroup }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: ${{ values.environment }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup ${{ values.runtime }} Runtime
        uses: actions/setup-${{ values.runtime }}@v4
        with:
          ${{ values.runtime }}-version: ${{ values.runtimeVersion }}
      
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Build Function App
        shell: bash
        run: |
          if [ "${{ values.runtime }}" = "node" ]; then
            if [ -f "package.json" ]; then
              npm install
              npm run build --if-present
            fi
          elif [ "${{ values.runtime }}" = "python" ]; then
            python -m pip install --upgrade pip
            pip install -r requirements.txt
          elif [ "${{ values.runtime }}" = "dotnet" ] || [ "${{ values.runtime }}" = "dotnet-isolated" ]; then
            dotnet build --configuration Release
          elif [ "${{ values.runtime }}" = "java" ]; then
            mvn clean package
          elif [ "${{ values.runtime }}" = "powershell" ]; then
            pwsh -Command "Install-Module -Name Az -Force"
          fi
      
      - name: Deploy to Azure Function App
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
          respect-funcignore: true

      - name: Configure App Settings
        uses: azure/CLI@v1
        with:
          azcliversion: '2.50.0'
          inlineScript: |
            az functionapp config appsettings set \
              --name ${{ env.AZURE_FUNCTIONAPP_NAME }} \
              --resource-group ${{ env.RESOURCE_GROUP }} \
              --settings '@${{ values.appSettingsJson }}'

      - name: Enable Application Insights
        if: ${{ values.enableMonitoring == 'true' }}
        uses: azure/CLI@v1
        with:
          azcliversion: '2.50.0'
          inlineScript: |
            az monitor app-insights component create \
              --app ${{ env.AZURE_FUNCTIONAPP_NAME }} \
              --location ${{ values.location }} \
              --resource-group ${{ env.RESOURCE_GROUP }}
